# be sure to add all "required" values...

# amazonec2, azure, digitalocean, harvester, vsphere, custom
cloudprovider: digitalocean

# cloud provider credentials (example: aws-creds)
cloudCredentialSecretName: digitalocean-creds

# rancher manager url
rancher:
  cattle:
    url: # required (example: rancher.example.com)

# cluster values
cluster:
  # annotations:
    # key: value
  # labels:
    # key: value
  name: rke2-cluster-digitalocean
  config:
    systemDefaultRegistry: docker.io # default registry
    kubernetesVersion: v1.26.11+rke2r1 # https://github.com/rancher/rke2/releases
    localClusterAuthEndpoint:
      enabled: false
    # agentEnvVars:
      # - key:value
    cni: canal # canal, calico, cilium, multus,canal, multus,calico, multus,cilium
    docker: false
    disable_kube_proxy: false
    etcd_expose_metrics: false
    enableNetworkPolicy: true
    profile: '' # cis-1.6, cis-1.23
    selinux: false
    secrets_encryption: false
    write_kubeconfig_mode: 0600
    use_service_account_credentials: false
    protect_kernel_defaults: false
    # kube_controller_manager_arg: # (https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager)
      # - kube controller manager arguments here
    # kube_scheduler_arg: # (https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler)
      # - kube scheduler arguments here
    # kube_apiserver_arg: # (https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver)
      # - kube apiserver arguments here
    # kubelet_arg: # (https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet)
      # - kubelet arguments here
    registries:
      enabled: false
      # configs:
        # - name: registry.example.com
          # authConfigSecretName: registry-creds
          # caBundle: ''
          # insecureSkipVerify: false
          # tlsSecretName: ''
      # mirrors:
        # - name: docker.io
          # endpoints: ['registry.example.com']
    upgradeStrategy:
      controlPlaneConcurrency: 10%
      controlPlaneDrainOptions:
        enabled: false
        # deleteEmptyDirData: true
        # disableEviction: false
        # force: false
        # gracePeriod: -1
        # ignoreDaemonSets: true
        # ignoreErrors: false
        # skipWaitForDeleteTimeoutSeconds: 0
        # timeout: 120
      workerConcurrency: 10%
      workerDrainOptions:
        enabled: false
        # deleteEmptyDirData: true
        # disableEviction: false
        # force: false
        # gracePeriod: -1
        # ignoreDaemonSets: true
        # ignoreErrors: false
        # skipWaitForDeleteTimeoutSeconds: 0
        # timeout: 120

# node and nodepool(s) values
nodepools:
  - name: control-plane-nodes
    quantity: 3
    etcd: true
    controlplane: true
    worker: false
    # labels:
      # key: value
    # taints:
      # key: value
    paused: false
    # accessToken: '' # only needed if not using cloudCredentialSecretName
    backups: false
    image: # required (example: rockylinux-9-x64)
    ipv6: false
    monitoring: false
    privateNetworking: false
    region: # required (example: nyc3)
    size: # required (example: s-4vcpu-8gb)
    # sshKeyContents: ''
    # sshKeyFingerprint: ''
    # sshPort: 22
    sshUser: # required (example: rocky)
    # tags: ''
    # userData: |
      #cloud-config

  - name: worker-nodes
    quantity: 3
    etcd: false
    controlplane: false
    worker: true
    # labels:
      # key: value
    # taints:
      # key: value
    paused: false
    # accessToken: '' # only needed if not using cloudCredentialSecretName
    backups: false
    image: # required (example: rockylinux-9-x64)
    ipv6: false
    monitoring: false
    privateNetworking: false
    region: # required (example: nyc3)
    size: # required (example: s-4vcpu-8gb)
    # sshKeyContents: ''
    # sshKeyFingerprint: ''
    # sshPort: 22
    sshUser: # required (example: rocky)
    # tags: ''
    # userData: |
      #cloud-config

# addons values
addons:
  monitoring:
    enabled: false
    # version:
    # values:
      # values here

  longhorn:
    enabled: false
    # version:
    # values:
      # values here

  neuvector:
    enabled: false
    # version:
    # values:
      # values here
